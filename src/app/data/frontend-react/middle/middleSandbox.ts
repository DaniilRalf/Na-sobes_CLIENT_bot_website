const MiddleSandbox = [


  // {
  //   number: 1,
  //   question: 'Lazy loading, code splitting',
  //   answer: {"data":[{"paragraph": "Lazy loading - ленивая загрузка, для того чтобы загружать очередной бандл по требованию. Эта оптимизация полезна т.к. не все части приложения могут пригодится сразу же. Таким образом мы можем ускорить загрузку сайта за счет меньшего размера бандла."},
  //       {"paragraph": "Бандлы - это результат работы работы сборщиков проекта (Webpack, Rollup). Сама сборка - это процесс выявления импортированных файлов и объединения их в один файл (часто называемый \"bundle\" или \"бандл\"). Этот бандл после подключения на веб-страницу загружает приложение."},
  //       {"paragraph": "Однако нужно следить за размером бандла - любая подключенная библиотека добавляет лишний килобайты. И загрузка может занять слишком много времени. При помощи сборщиков проекта можно создавать несколько бандлов и загружать их по мере необходимости. Общий размер кода не уменьшится (он будет разделен на несколько частей) - однако начальная загрузка будет быстрее."},
  //       {"paragraph": " - React.lazy"},
  //       {"code": "const OtherComponent = React.lazy(() => import('./OtherComponent'))"},
  //       {"paragraph": "Она автоматически загрузит бандл, содержащий OtherComponent, когда этот компонент будет впервые отрендерен."},
  //       {"paragraph": "React.lazy принимает функцию, которая должна вызвать динамический import(). Результатом возвращённого Promise является модуль, который экспортирует по умолчанию React-компонент (export default)."},
  //       {"paragraph": " - Suspense"},
  //       {"paragraph": "Компонент с ленивой загрузкой должен рендериться внутри компонента Suspense, который позволяет нам показать запасное содержимое (например, индикатор загрузки) пока происходит загрузка ленивого компонента."},
  //       {"paragraph": " - Предохранители (error boundary)"},
  //       {"paragraph": "Если какой-то модуль не загружается (например, из-за сбоя сети), это вызовет ошибку. Можно обрабатывать эти ошибки для улучшения пользовательского опыта с помощью предохранителей."}]}
  // },

  {
    number: 2,
    question: 'asdasdasd',
    answer: {"data":[
        {"paragraph": ""},
        {"paragraph": ""},
        {"code": ""},
        {"paragraph": ""}
      ]}
  },

]
